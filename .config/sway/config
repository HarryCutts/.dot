# Sway config
#
# Read `man 5 sway` for a complete reference.
#
# Debian package dependencies:
#   brightnessctl
#   gnome-terminal
#   grim
#   playerctl
#   pulseaudio-utils (for pactl)
#   slurp
#   sway
#   swayidle
#   swaylock
#   waybar
#   wdisplays
#   wofi

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down t
set $up n
set $right s
# Your preferred terminal emulator
set $term gnome-terminal

include /etc/sway/config-vars.d/*

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output DP-3 pos 0 0 res 3840x2160
# TODO: work out why the Y coordinate seems to be completely ignored for eDP1
output eDP1 pos 3840 825 res 3840x2400

### Idle configuration
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec swayidle -w \
         timeout 300 'swaylock --daemonize --color 000000' \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock --daemonize --color 000000'

### Input configuration
#
# Read `man 5 sway-input` for more information about this section.

set $xkb_layout us
set $xkb_variant dvorak
set $xkb_options caps:escape,shift:both_capslock,compose:ralt

input "type:keyboard" {
    xkb_layout $xkb_layout
    xkb_variant $xkb_variant
    xkb_options $xkb_options
}

input "2:10:TPPS/2_Elan_TrackPoint" {
    accel_profile flat
}

input "7504:24866:Ultimate_Gadget_Laboratories_UHK_60_v1" {
    xkb_layout $xkb_layout
    xkb_variant $xkb_variant
    xkb_options $xkb_options
    accel_profile flat
}

focus_follows_mouse no

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+space exec wofi --show drun --allow-images --sort-order=alphabetical
    # It would be nice to pass the final command to swaymsg here, so that the resulting window opens
    # on the original workspace that the command was run on, but Wofi doesn't support this.
    bindsym $mod+shift+space exec wofi --show run --sort-order=alphabetical


    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Lock the screen
    bindsym $mod+l exec swaylock --color 000000

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+period exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Move whole workspace between monitors
    bindsym $mod+Ctrl+$left move workspace to output left
    bindsym $mod+Ctrl+$down move workspace to output down
    bindsym $mod+Ctrl+$up move workspace to output up
    bindsym $mod+Ctrl+$right move workspace to output right
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+d splith
    bindsym $mod+f splitv

    # Switch the current container between different layout styles
    bindsym $mod+o layout stacking
    bindsym $mod+a layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+u fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+apostrophe floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+apostrophe focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+comma focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+grave move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+grave scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Laptop control keys:
#
# Source for some: https://wiki.archlinux.org/title/Sway#Custom_keybindings
# Can find key names using wev
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
    bindsym XF86MonBrightnessUp exec brightnessctl set +5%
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%-
    bindsym XF86Display exec wdisplays

#
# Miscellaneous:
#
    bindsym Print exec 'grim -g "$(slurp)"'

#
# Touchpad gestures:
#
    bindgesture swipe:3:right workspace next
    bindgesture swipe:3:left workspace prev

### Status Bar
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %X'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

include /etc/sway/config.d/*

### Per-window rules

# Hide title bar for Chrome apps, which already have their own.
for_window [app_id="^chrome-.*"] border pixel 2

# Various Gnome-style apps with their own title bar
for_window [app_id="eog"] border pixel 2
for_window [app_id="wdisplays"] border pixel 2

### Other stuff

hide_edge_borders both
smart_borders on

exec "ssh-agent -a $SSH_AUTH_SOCK"
